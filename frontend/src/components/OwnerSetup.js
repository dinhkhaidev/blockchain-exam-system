import React, { useState } from 'react';
import { useWeb3 } from '../contexts/Web3Context';
import { toast } from 'react-toastify';
import { FaCrown, FaShieldAlt, FaCheckCircle, FaTimesCircle, FaSync } from 'react-icons/fa';

const OwnerSetup = () => {
  const { isConnected, account, contracts, isOwner, ownerAddress, userType, setUserTypeManually } = useWeb3();
  const [isLoading, setIsLoading] = useState(false);
  const [currentOwner, setCurrentOwner] = useState(null);

  const checkCurrentOwner = async () => {
    try {
      setIsLoading(true);
      if (contracts.examRegistration) {
        const owner = await contracts.examRegistration.owner();
        setCurrentOwner(owner);
        toast.info(`Owner hi·ªán t·∫°i: ${owner}`);
      }
    } catch (error) {
      console.error('Error checking owner:', error);
      toast.error('L·ªói ki·ªÉm tra owner: ' + error.message);
    } finally {
      setIsLoading(false);
    }
  };

  const setupOwner = async () => {
    try {
      setIsLoading(true);
      
      if (!isConnected) {
        toast.error('Vui l√≤ng k·∫øt n·ªëi v√≠ tr∆∞·ªõc!');
        return;
      }

      if (!contracts.examRegistration) {
        toast.error('Contract ch∆∞a ƒë∆∞·ª£c kh·ªüi t·∫°o!');
        return;
      }

      toast.info('ƒêang thi·∫øt l·∫≠p owner...');
      
      // Try to transfer ownership to current account
      const tx = await contracts.examRegistration.transferOwnership(account);
      await tx.wait();
      
      toast.success('Thi·∫øt l·∫≠p owner th√†nh c√¥ng!');
      
      // Reload page to update status
      window.location.reload();
      
    } catch (error) {
      console.error('Error setting up owner:', error);
      
      if (error.code === 4001) {
        toast.error('Giao d·ªãch b·ªã h·ªßy b·ªüi ng∆∞·ªùi d√πng');
      } else if (error.message.includes('Ownable: caller is not the owner')) {
        toast.error('B·∫°n kh√¥ng ph·∫£i l√† owner hi·ªán t·∫°i!');
        toast.info('üí° C·∫ßn deploy l·∫°i contract v·ªõi ƒë·ªãa ch·ªâ v√≠ c·ªßa b·∫°n');
      } else {
        toast.error('L·ªói thi·∫øt l·∫≠p owner: ' + error.message);
      }
    } finally {
      setIsLoading(false);
    }
  };

  const selectOwnerRole = () => {
    setUserTypeManually('owner');
    toast.success('ƒê√£ ch·ªçn vai tr√≤ Owner!');
    // Reload page to update status
    window.location.reload();
  };

  return (
    <div className="max-w-4xl mx-auto">
      <div className="bg-white rounded-lg shadow-lg p-8">
        <div className="text-center mb-8">
          <div className="w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <FaCrown className="text-purple-600 text-2xl" />
          </div>
          <h2 className="text-2xl font-bold text-gray-900 mb-4">
            Thi·∫øt l·∫≠p Owner
          </h2>
          <p className="text-gray-600">
            Ki·ªÉm tra v√† thi·∫øt l·∫≠p quy·ªÅn owner cho ƒë·ªãa ch·ªâ v√≠ c·ªßa b·∫°n
          </p>
        </div>

        {/* Current Status */}
        <div className="bg-gray-50 rounded-lg p-6 mb-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">Tr·∫°ng th√°i hi·ªán t·∫°i:</h3>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="flex items-center">
              <FaShieldAlt className="text-blue-600 mr-3" />
              <div>
                <p className="text-sm font-medium text-gray-700">ƒê·ªãa ch·ªâ v√≠:</p>
                <p className="text-sm text-gray-900 font-mono">{account || 'Ch∆∞a k·∫øt n·ªëi'}</p>
              </div>
            </div>
            
            <div className="flex items-center">
              {isOwner ? (
                <FaCheckCircle className="text-green-600 mr-3" />
              ) : (
                <FaTimesCircle className="text-red-600 mr-3" />
              )}
              <div>
                <p className="text-sm font-medium text-gray-700">Quy·ªÅn Owner:</p>
                <p className={`text-sm font-medium ${isOwner ? 'text-green-600' : 'text-red-600'}`}>
                  {isOwner ? 'C√≥ quy·ªÅn' : 'Kh√¥ng c√≥ quy·ªÅn'}
                </p>
              </div>
            </div>
            
            <div className="flex items-center">
              {userType === 'owner' ? (
                <FaCheckCircle className="text-green-600 mr-3" />
              ) : (
                <FaTimesCircle className="text-red-600 mr-3" />
              )}
              <div>
                <p className="text-sm font-medium text-gray-700">Vai tr√≤ Owner:</p>
                <p className={`text-sm font-medium ${userType === 'owner' ? 'text-green-600' : 'text-red-600'}`}>
                  {userType === 'owner' ? 'ƒê√£ ch·ªçn' : 'Ch∆∞a ch·ªçn'}
                </p>
              </div>
            </div>
            
            {currentOwner && (
              <div className="flex items-center md:col-span-2">
                <FaCrown className="text-purple-600 mr-3" />
                <div>
                  <p className="text-sm font-medium text-gray-700">Owner hi·ªán t·∫°i:</p>
                  <p className="text-sm text-gray-900 font-mono">{currentOwner}</p>
                </div>
              </div>
            )}
          </div>
        </div>

        {/* Actions */}
        <div className="space-y-4">
          <button
            onClick={checkCurrentOwner}
            disabled={isLoading || !isConnected}
            className={`w-full flex items-center justify-center px-4 py-3 border border-transparent text-sm font-medium rounded-md text-white transition-colors duration-200 ${
              isLoading || !isConnected
                ? 'bg-gray-400 cursor-not-allowed'
                : 'bg-blue-600 hover:bg-blue-700'
            }`}
          >
            <FaSync className="mr-2" />
            Ki·ªÉm tra Owner hi·ªán t·∫°i
          </button>

          {!isOwner && (
            <button
              onClick={setupOwner}
              disabled={isLoading || !isConnected}
              className={`w-full flex items-center justify-center px-4 py-3 border border-transparent text-sm font-medium rounded-md text-white transition-colors duration-200 ${
                isLoading || !isConnected
                  ? 'bg-gray-400 cursor-not-allowed'
                  : 'bg-purple-600 hover:bg-purple-700'
              }`}
            >
              <FaCrown className="mr-2" />
              Thi·∫øt l·∫≠p Owner (n·∫øu c√≥ quy·ªÅn)
            </button>
          )}

          {isOwner && userType !== 'owner' && (
            <button
              onClick={selectOwnerRole}
              disabled={isLoading}
              className="w-full flex items-center justify-center px-4 py-3 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 transition-colors duration-200"
            >
              <FaCrown className="mr-2" />
              Ch·ªçn vai tr√≤ Owner
            </button>
          )}
        </div>

        {/* Instructions */}
        <div className="mt-8 bg-yellow-50 rounded-lg p-6">
          <h3 className="text-lg font-semibold text-yellow-800 mb-4">üí° H∆∞·ªõng d·∫´n kh·∫Øc ph·ª•c:</h3>
          
          <div className="space-y-4">
            <div>
              <h4 className="text-sm font-medium text-yellow-800 mb-2">N·∫øu b·∫°n kh√¥ng ph·∫£i owner:</h4>
              <ol className="text-sm text-yellow-700 space-y-1 ml-4">
                <li>1. ƒê·∫£m b·∫£o Ganache ƒëang ch·∫°y</li>
                <li>2. Deploy l·∫°i contract v·ªõi ƒë·ªãa ch·ªâ v√≠ c·ªßa b·∫°n</li>
                <li>3. C·∫≠p nh·∫≠t ƒë·ªãa ch·ªâ contract trong frontend</li>
                <li>4. Restart ·ª©ng d·ª•ng</li>
              </ol>
            </div>
            
            <div>
              <h4 className="text-sm font-medium text-yellow-800 mb-2">N·∫øu b·∫°n l√† owner nh∆∞ng ch∆∞a ch·ªçn vai tr√≤:</h4>
              <ol className="text-sm text-yellow-700 space-y-1 ml-4">
                <li>1. Click "Ch·ªçn vai tr√≤ Owner" ƒë·ªÉ thi·∫øt l·∫≠p vai tr√≤</li>
                <li>2. H·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông chuy·ªÉn ƒë·∫øn Admin Dashboard</li>
                <li>3. B√¢y gi·ªù b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng t·∫•t c·∫£ t√≠nh nƒÉng Admin</li>
              </ol>
            </div>
            
            <div>
              <h4 className="text-sm font-medium text-yellow-800 mb-2">N·∫øu b·∫°n l√† owner nh∆∞ng kh√¥ng c√≥ quy·ªÅn:</h4>
              <ol className="text-sm text-yellow-700 space-y-1 ml-4">
                <li>1. Ki·ªÉm tra ƒë·ªãa ch·ªâ contract c√≥ ƒë√∫ng kh√¥ng</li>
                <li>2. Th·ª≠ k·∫øt n·ªëi l·∫°i MetaMask</li>
                <li>3. Refresh trang v√† th·ª≠ l·∫°i</li>
              </ol>
            </div>
          </div>
        </div>

        {/* Contract Info */}
        <div className="mt-6 bg-blue-50 rounded-lg p-4">
          <h4 className="text-sm font-medium text-blue-800 mb-2">üìã Th√¥ng tin Contract:</h4>
          <div className="text-xs text-blue-700 space-y-1">
            <p><strong>ExamRegistration:</strong> 0x5FbDB2315678afecb367f032d93F642f64180aa3</p>
            <p><strong>ExamCertificateNFT:</strong> 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512</p>
            <p><strong>Network:</strong> localhost:8545</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default OwnerSetup; 